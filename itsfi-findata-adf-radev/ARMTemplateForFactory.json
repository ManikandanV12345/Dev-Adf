{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "itsfi-findata-adf-radev"
		},
		"itsfi_blob_ac_key01_properties_typeProperties_sasUri_secretName": {
			"type": "string",
			"defaultValue": "blob"
		},
		"itsfi_dfs_ac_key01_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://itsfiadls.dfs.core.windows.net"
		},
		"itsfi_sqlmi_dataframework_key01_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "sqlsecret"
		},
		"AzureKeyVault2_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://sqlkyvaults.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Wait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Web')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/5274f02e-4f75-4111-8181-64bc40c6cad8/resourceGroups/ITSTR-Dataplatform-Dev/providers/Microsoft.DataFactory/factories/itsfitrdatafactorydevs/pipelines/Wait/createRun?api-version=2018-06-01",
							"method": "POST",
							"headers": {},
							"body": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.core.windows.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web2",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.loganalytics.io/v1/workspaces/53825fbd-cfe9-43ac-8639-a5db7dd2e6b1/query?query=ADFPipelineRun | where RunId =='3d0e6918-0981-40a4-b1ce-ec6430bd5dfb' | extend PackedRecord = pack_all() | summarize Result = make_list(PackedRecord)",
							"method": "GET",
							"headers": {
								"Headers": "Accept: application/json"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://api.loganalytics.io"
							}
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Web2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[uspCustomerInfo]",
								"storedProcedureParameters": {
									"json": {
										"type": "String",
										"value": {
											"value": "@json(replace(string(activity('Web2').output.tables[0].rows),'\\',''))",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"var": {
						"type": "Array"
					},
					"json": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "itsfi_sqlmi_dataframework_key01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "SourceSystem",
						"type": "nvarchar"
					},
					{
						"name": "TimeGenerated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ResourceId",
						"type": "nvarchar"
					},
					{
						"name": "OperationName",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "CorrelationId",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Location",
						"type": "nvarchar"
					},
					{
						"name": "Tags",
						"type": "nvarchar"
					},
					{
						"name": "Status",
						"type": "nvarchar"
					},
					{
						"name": "UserProperties",
						"type": "nvarchar"
					},
					{
						"name": "Input",
						"type": "nvarchar"
					},
					{
						"name": "Output",
						"type": "varchar"
					},
					{
						"name": "ErrorCode",
						"type": "varchar"
					},
					{
						"name": "ErrorMessage",
						"type": "varchar"
					},
					{
						"name": "Annotations",
						"type": "varchar"
					},
					{
						"name": "EventMessage",
						"type": "varchar"
					},
					{
						"name": "Start",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TriggerId",
						"type": "varchar"
					},
					{
						"name": "TriggerName",
						"type": "varchar"
					},
					{
						"name": "TriggerType",
						"type": "varchar"
					},
					{
						"name": "TriggerEvent",
						"type": "varchar"
					},
					{
						"name": "TriggerFailureType",
						"type": "varchar"
					},
					{
						"name": "Parameters",
						"type": "varchar"
					},
					{
						"name": "SystemParametersType",
						"type": "varchar"
					},
					{
						"name": "_ResourceId",
						"type": "varchar"
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/itsfi_sqlmi_dataframework_key01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/itsfi_blob_ac_key01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault2",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('itsfi_blob_ac_key01_properties_typeProperties_sasUri_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/itsfi_dfs_ac_key01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('itsfi_dfs_ac_key01_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault2",
							"type": "LinkedServiceReference"
						},
						"secretName": "adls1"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/itsfi_sqlmi_dataframework_key01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault2",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('itsfi_sqlmi_dataframework_key01_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline1",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 30,
					"startTime": "2022-09-15T07:36:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault2_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		}
	]
}